{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","request","url","a","fetch","require","json","result","getMovie","FindMovie","addMovie","useState","inputValue","setInputValue","setMovie","isFound","setIsFound","setMovieFromServer","movieFromServer","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","value","onChange","target","type","id","placeholder","classNames","onClick","App","state","data","find","film","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89cbd75d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=450c55f&t=';\n\nexport const request = async(url) => {\n  const require = await fetch(`${BASE_URL}${url}`);\n  const result = await require.json();\n\n  return result;\n};\n\nexport const getMovie = async(title) => {\n  const movie = await request(title);\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isFound, setIsFound] = useState(null);\n\n  const addToMovieList = (event) => {\n    event.preventDefault();\n\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  const setMovieFromServer = async() => {\n    const movieFromServer = await getMovie(inputValue);\n\n    if (!movieFromServer.Title) {\n      setIsFound(false);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: movieFromServer.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n      imdbId: movieFromServer.imdbID,\n    });\n    setIsFound(true);\n\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <form onSubmit={addToMovieList} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={inputValue}\n              onChange={(event) => {\n                setInputValue(event.target.value);\n                setIsFound(null);\n              }}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isFound === false,\n              })}\n            />\n          </div>\n\n          {isFound === false && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={() => setMovieFromServer()}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (movie !== null) {\n      if (!(this.state.movies.find(film => film.imdbId === movie.imdbId))) {\n        this.setState(state => ({ movies: [...state.movies, movie] }));\n      }\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}